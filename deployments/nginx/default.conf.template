upstream blog_service {
	server blog:9000;
}

upstream user_service {
	server user:9000;
}

server {
  listen 80;
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name ${NGINX_HOST};
  root /home/app/build;
  index index.html;

  ssl_certificate /etc/nginx/ssl/site.pem;
  ssl_certificate_key /etc/nginx/ssl/site.key;

  access_log off;
	error_log /var/log/nginx/error.log;

  # Disallow other sites from embedding yours in an iframe
	# to prevent clickjacking attacks.
	# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
	add_header X-Frame-Options SAMEORIGIN;

	# Prevent browsers from trying to mime-sniff the
	# content-type of a response
	# See: https://scotthelme.co.uk/hardening-your-http-response-headers/
	add_header X-Content-Type-Options "nosniff" always;

  # Cache these files for a long time
	# See: https://www.linode.com/docs/websites/nginx/configure-nginx-for-optimized-performance
	location ~* \.(woff|woff2|eot|ttf|svg|mp4|webm|jpg|jpeg|png|gif|ico|css|js)$ {
		try_files $uri =404;
		expires 365d;
	}

  error_page 404 = @notfound;
	location @notfound {
		root /home/app/build;
		try_files $uri /index.html =404;
	}

  location ~ ^/api/v1/blog.*$ {
    proxy_pass https://blog_service;
  }

  location ~ ^/api/v1/auth.*$ {
    proxy_pass https://user_service;
  }

  location ~ ^/api/v1/user.*$ {
    # Rewrite only if you want to strip out the start path.
    # rewrite /api/v1/(.*) /$1 break;
    proxy_pass https://user_service;
  }
}

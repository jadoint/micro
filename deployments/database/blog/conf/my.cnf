[client]
port = 3306
default-character-set = utf8mb4

[mysql]

# CLIENT #
port = 3306
default-character-set = utf8mb4

[mysqld]
# GENERAL #
user = mysql
default-storage-engine = InnoDB
connect_timeout = 15
character-set-client-handshake = FALSE
character-set-server = utf8mb4
collation-server = utf8mb4_0900_ai_ci

# BINARY LOGGING #

# Set this to 1 on a master
sync_binlog = 1

# Set on Master
# Enabling this variable causes the master to examine checksums
# when reading from the binary log. master_verify_checksum is
# disabled by default;
#master_verify_checksum = 1

# Set to 1 if Slave
# Cause the slave SQL thread to verify data using the checksums
# read from the relay log. In the event of a mismatch, the slave
# stops with an error. Setting this variable takes effect for all
# replication channels immediately, including running channels.
#slave_sql_verify_checksum = 1

# When log-bin is set, log_bin is automatically set to ON
log-bin = /var/lib/mysql/mysql-bin
relay-log = /var/lib/mysql/relay-bin
binlog_expire_logs_seconds = 864000
binlog-format = row
#server-id = 19216801
#report-host = 192.168.0.1
master-info-repository = TABLE

# Replication #
#read-only = ON
#skip-slave-start = 1

# Enable GTID #
#gtid_mode = ON
#enforce_gtid_consistency = ON

# Enable crash-safe slaves #
#relay-log-recovery = ON

# SECURE CONNECTIONS #

ssl-ca=/var/lib/mysql/ca.pem
ssl-cert=/var/lib/mysql/server-cert.pem
ssl-key=/var/lib/mysql/server-key.pem

# CACHES AND LIMITS #

# Without considering MyISAM buffers, each connection
# uses about 192KB of memory. You need to make sure
# that (max_connections * 192KB) + innodb_buffer_pool_size
# is less than total system memory, otherwise MySql could
# start swapping. Default value is 100 connections.
# 2000 connections will use ~400MB of memory.
# Default value is 151.
# To find the number of currently open connections, run:
# show status where variable_name = 'Threads_connected';
# An error of 'Too many connections' will occur if this
# limit is passed.
max_connections = 151

open_files_limit = 65535

# INNODB #

# Tells the OS that MySql will be doing its own caching and that
# it should skip using the file system cache to avoid double
# caching of the data.
innodb_flush_method = O_DIRECT

# Set this to 1 on a master for safest, ACID compliant operation
# (sync after every transaction, high I/O).
# Set this to 2 on a slave, which can cause up to a second of
# data loss after an OS crash, but frees up I/O because it only
# fsyncs data to disk once per second.
# innodb_flush_log_at_trx_commit = 1

# Bigger log file size = less I/O used for writes, but longer
# recovery time during a failure.
# You can set this by calculating how many MB of data per
# minute are written to the file and setting the value to be
# large enough to hold one hour's worth of writes. Run:
# show global status where variable_name like '%Innodb_os_log_written%';select sleep(60);show global status where variable_name like '%Innodb_os_log_written%';
# Second number - First number = x bytes written per minute to log file
# Convert x bytes to x MB then do
# x MB * 60 minutes = y MB
# Since InnoDB keeps two individual log files, divide y MB by 2
# and use the resulting number for innodb_log_file_size.
# See also: http://www.percona.com/blog/2014/12/24/innodb-crash-recovery-speed-mysql-5-6/
# tl;dr: Recent MySql versions and SSDs have drastically improved recovery times and
# can be estimated to around 1.25 minutes / GB. You can set this higher than
# what you've calculated above.
# innodb_log_file_size = 128M

# Set this to ~80-90% of your memory. This is probably the most
# important MySql value that you need to tune.
# 64GB -> 52GB (51200M)
# 51GB -> 41GB (41000M)
# 32GB -> 26GB (25600M)
# 16GB -> 13GB (12800M)
# 8GB -> 7GB (6400M)
innodb_buffer_pool_size = 10M

# InnoDB uses background threads to prefetch and store data.
# The default is 4 threads, but should really be
# 4 * # of CPU cores.
#innodb_read_io_threads = 4
#innodb_write_io_threads = 4

# This should be set as the maximum amount of IOPS that your
# system has. It sets a max cap on how much I/O InnoDB can use.
# Default is 200.
#innodb_io_capacity = 15000

# Limit up to which InnoDB is allowed to extend innodb_io_capacity
# setting in case of emergency. Defaults to twice the value of
# innodb_io_capacity.
#innodb_io_capacity_max = 30000

# LOGGING #
log-error = /var/lib/mysql/error.log

# If receiving error:
# "MySQL said: Authentication plugin 'caching_sha2_password' cannot be loaded"
# try enabling the setting below.
default_authentication_plugin = mysql_native_password